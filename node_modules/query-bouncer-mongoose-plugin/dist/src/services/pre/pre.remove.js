"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const removeAuthorizerOptions_1 = __importDefault(require("../removeAuthorizerOptions"));
const bouncerIsActivated_1 = __importDefault(require("../bouncerIsActivated"));
const extractCookieOrJWTAndReturnHeader_1 = __importDefault(require("../extractCookieOrJWTAndReturnHeader"));
const preFind = async (schema, config) => {
    schema.pre('remove', { query: true, document: false }, async function () {
        if ((0, bouncerIsActivated_1.default)(this.options)) {
            const axios = config.axios;
            const collection = this._collection.collectionName;
            const right = 'delete';
            const query = this.getQuery();
            try {
                const headers = (0, extractCookieOrJWTAndReturnHeader_1.default)(this.options, config);
                (0, removeAuthorizerOptions_1.default)(this);
                const newQuery = (await axios.put(`/${collection}/${right}`, { query }, { headers })).data.query;
                this.setQuery(newQuery);
            }
            catch (err) {
                console.log(err);
            }
        }
    });
};
exports.default = preFind;
//# sourceMappingURL=pre.remove.js.map