"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = __importDefault(require("../services/axios"));
class QbConfig {
    constructor(input) {
        var _a;
        let baseUrl;
        let apiVersion;
        let cookieName;
        let jwtHeaderName;
        let axios;
        if (input instanceof QbConfig) {
            baseUrl = input.opts.baseUrl;
            apiVersion = input.opts.apiVersion;
            cookieName = input.opts.cookieName;
            jwtHeaderName = input.opts.jwtHeaderName;
            axios = input.axios;
        }
        else {
            baseUrl = input
                ? input.baseUrl || 'http://localhost123:8080'
                : 'http://localhost:8080';
            apiVersion = input
                ? input.apiVersion || 'v1'
                : 'v1';
            cookieName = input
                ? input.cookieName || 'connect.sid'
                : 'connect.sid';
            jwtHeaderName = input
                ? ((_a = input.jwtHeaderName) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase()) || 'authorization'
                : 'authorization';
            axios = input
                ? input.axios || (0, axios_1.default)(baseUrl, apiVersion)
                : (0, axios_1.default)(baseUrl, apiVersion);
        }
        this.opts = {
            baseUrl, apiVersion, cookieName, jwtHeaderName, axios
        };
    }
    set baseUrl(url) {
        this.opts.baseUrl = url;
    }
    get baseUrl() {
        return this.opts.baseUrl;
    }
    get apiVersion() {
        return this.opts.apiVersion;
    }
    get cookieName() {
        return this.opts.cookieName;
    }
    get jwtHeaderName() {
        return this.opts.jwtHeaderName;
    }
    get axios() {
        return this.opts.axios;
    }
    set axios(axios) {
        this.opts.axios = axios;
    }
}
exports.default = QbConfig;
//# sourceMappingURL=class.QbConfig.js.map