"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.findByIdAndUpdate = exports.create = exports.findById = exports.find = void 0;
const getTransaction_1 = __importDefault(require("../sentry/getTransaction"));
const find = async (results, query, options, existingTransaction) => {
    const transaction = (0, getTransaction_1.default)({
        name: 'service._default.helpers.runAllPostprocessing.find',
        op: 'service.run',
    }, existingTransaction);
    for (const [i, p] of Object.entries(options.options.postProcessing)) {
        await p(results, query, options);
    }
    transaction.finish();
};
exports.find = find;
const findById = async (result, id, options, existingTransaction) => {
    const transaction = (0, getTransaction_1.default)({
        name: 'service._default.helpers.runAllPostProcessing.findById',
        op: 'service.run'
    }, existingTransaction);
    for (const p of options.options.postProcessing)
        await p(result, id, options);
    transaction.finish();
};
exports.findById = findById;
const create = async (created, options, existingTransaction) => {
    const transaction = (0, getTransaction_1.default)({
        name: 'service._default.helpers.runAllPostProcessing.create',
        op: 'service.run'
    }, existingTransaction);
    for (const p of options.options.postProcessing)
        await p(created, options);
    transaction.finish();
};
exports.create = create;
const findByIdAndUpdate = async (updated, options, existingTransaction) => {
    const transaction = (0, getTransaction_1.default)({
        name: 'service._default.helpers.runAllPostProcessing.findByIdAndUpdate',
        op: 'service.run'
    }, existingTransaction);
    for (const p of options.options.postProcessing)
        await p(updated, options);
    transaction.finish();
};
exports.findByIdAndUpdate = findByIdAndUpdate;
exports.default = {
    find,
    findById,
    create,
    findByIdAndUpdate
};
//# sourceMappingURL=service._default.helpers.runAllPostprocessing.js.map