"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const wrapperCreateOptions_1 = __importDefault(require("../../classes/wrapperCreateOptions"));
const service__default_helpers_runAllMiddleware_1 = __importDefault(require("../../services/main/service._default.helpers.runAllMiddleware"));
const service__default_helpers_runAllPostprocessing_1 = __importDefault(require("../../services/main/service._default.helpers.runAllPostprocessing"));
const getTransaction_1 = __importDefault(require("../sentry/getTransaction"));
const addTags_Model_1 = __importDefault(require("../sentry/addTags.Model"));
const errorWithCode_1 = require("../../classes/errorWithCode");
exports.default = (model, wrapperCreateOpts = {}, existingTransaction) => async (item) => {
    const transaction = (0, getTransaction_1.default)({
        name: 'service._default.create',
        op: 'service.run',
        data: (0, addTags_Model_1.default)(model)
    }, existingTransaction);
    const opts = new wrapperCreateOptions_1.default(wrapperCreateOpts);
    await service__default_helpers_runAllMiddleware_1.default.create(item, opts, transaction);
    try {
        const opts = new wrapperCreateOptions_1.default(wrapperCreateOpts);
        const createdObjects = await model.create([item], opts.mongooseModel);
        await Promise.all(createdObjects.map(async (doc) => {
            var _a, _b;
            await Promise.all(((_b = (_a = wrapperCreateOpts.options) === null || _a === void 0 ? void 0 : _a.populateFields) === null || _b === void 0 ? void 0 : _b.map(async (field) => await doc.populate(field))) || []);
        }));
        const createdObject = createdObjects[0].toObject();
        if (createdObject)
            await service__default_helpers_runAllPostprocessing_1.default.create(createdObject, opts);
        return createdObject;
    }
    catch (err) {
        if (err instanceof Error && err.message.indexOf('User does not have Permission') !== -1)
            throw new errorWithCode_1.ErrorUnauthorized({ message: 'User does not have Permission to create' });
        else {
            throw err;
        }
    }
    finally {
        transaction.finish();
    }
};
//# sourceMappingURL=service._default.create.js.map