"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const errorWithCode_1 = __importStar(require("../../classes/errorWithCode"));
const Sentry = __importStar(require("@sentry/node"));
const isHttpError = (err) => {
    let itIs = false;
    if (err.code !== undefined && err.msg !== undefined) {
        if (err.code.toString().length === 3) {
            itIs = true;
        }
    }
    return itIs;
};
const isQueryBouncerError = (err) => {
    var _a;
    if (((_a = err.response) === null || _a === void 0 ? void 0 : _a.status) !== 403)
        return false;
    if (err.response.config.url.split('/').length !== 3)
        return false;
    if (!['read', 'create', 'update', 'delete'].some(right => right === err.response.config.url.split('/')[2]))
        return false;
    return true;
};
const formatQueryBouncerError = (err) => {
    if (!isQueryBouncerError(err))
        throw 'Tried to format Query Bouncer error but isn\'t one';
    return {
        collection: err.response.config.url.split('/')[1],
        right: err.response.config.url.split('/')[2],
        originalData: JSON.parse(err.config.data)
    };
};
const handleNonHttpError = (err, res) => {
    let error;
    if (err._message) {
        if (err._message.indexOf('validation failed') !== 1) {
            error = new errorWithCode_1.ErrorValidationFailed(err);
        }
    }
    if (err.name === 'MongoError') {
        if (err.driver === true && err.message.indexOf('file with id ') !== -1 && err.message.indexOf('not opened for writing') !== -1) {
            error = new errorWithCode_1.ErrorDocumentNotFound(err);
        }
        if (err.code === 11000) {
            error = new errorWithCode_1.ErrorValidationFailed({ message: err.message });
        }
    }
    if (!error) {
        error = new errorWithCode_1.ErrorInternalServerError(err);
    }
    return res.status(error.code).json(error);
};
const handleHttpError = (err, res) => {
    return res.status(err.code).json(err);
};
/**
 * @param  {Error} err The Error you want to be handled
 * @param  {Object} res Response of your express app;
 */
const handleError = (err, res) => {
    var _a, _b, _c;
    if (err instanceof errorWithCode_1.default)
        return res.status(err.code).json(err);
    if (err.isAxiosError) {
        if (((_a = err.response) === null || _a === void 0 ? void 0 : _a.status) === 403) {
            if (isQueryBouncerError(err)) {
                return res.status(403).json(new errorWithCode_1.ErrorUnauthorized(formatQueryBouncerError(err)));
            }
            return res.status(403).json({ message: ((_c = (_b = err.response) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.details) || err.statusText });
        }
        return res.status(500).json(err);
    }
    Sentry.captureException(err);
    if (isHttpError(err)) {
        return handleHttpError(err, res);
    }
    else {
        return handleNonHttpError(err, res);
    }
};
exports.default = handleError;
//# sourceMappingURL=controller.errorHandler.js.map